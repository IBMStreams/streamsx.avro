<?xml version="1.0" encoding="UTF-8"?><operatorModel xmlns="http://www.ibm.com/xmlns/prod/streams/spl/operator" xmlns:cmn="http://www.ibm.com/xmlns/prod/streams/spl/common" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.ibm.com/xmlns/prod/streams/spl/operator operatorModel.xsd">
  <!--DO NOT EDIT THIS FILE - it is machine generated-->
  <javaOperatorModel>
    <!--Generated from com.ibm.streamsx.avro.TupleToAvro in impl/lib/com.ibm.streamsx.avro.jar at Fri Jan 19 05:17:49 CET 2018-->
    <context>
      <description>This operator converts Streams tuples into binary Avro messages. The input tuples can benested types with lists and tuples, but the attribute types must be mappable to the Avro primitive types. {boolean, float32, float64, int32, int64, rstring and ustring} are respectively mapped to {Boolean, Float, Double, Integer, Long, String}</description>
      <iconUri size="16">TupleToAvro_16x16.png</iconUri>
      <iconUri size="32">TupleToAvro_32x32.png</iconUri>
      <metrics/>
      <executionSettings>
        <className>com.ibm.streamsx.avro.TupleToAvro</className>
      </executionSettings>
      <libraryDependencies>
        <library>
          <cmn:description>Operator class library</cmn:description>
          <cmn:managedLibrary>
            <cmn:libPath>../../impl/lib/com.ibm.streamsx.avro.jar</cmn:libPath>
            <cmn:libPath>../../opt/downloaded/*</cmn:libPath>
          </cmn:managedLibrary>
        </library>
      </libraryDependencies>
    </context>
    <parameters>
      <parameter>
        <name>avroMessageSchemaFile</name>
        <description>File that contains the Avro schema to serialize the Avro message(s).</description>
        <optional>false</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>bytesPerMessage</name>
        <description>Only valid if Avro schema is embedded in the output. This parameter controls the minimum size in bytes that the Avro message block should be before it is submitted to the outputport.</description>
        <optional>true</optional>
        <type>int64</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>embedAvroSchema</name>
        <description>Embed the schema in the generated Avro message. When generating Avro messages that must be persisted to a file system, the schema is expected to be included in the file. If this parameter is set to true, incoming tuples are batched and a large binary object that contains the Avro schema and 1 or more messages is generated. Also, you must specify one of the parameters (submitOnPunct, bytesPerMessage, tuplesPerMessage, timePerMessage) that controls when Avro message block is submitted to the output port.After submitting the Avro message to the output port, a punctuation is generated so that the receiving operator can potentially create a new file.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>ignoreParsingError</name>
        <description>Ignore any tuple or Avro parsing errors. When set to true, errors that occur when parsing the incoming tuple or constructing the Avro tuple(s) will be ignored and the incoming tuple(s) will be skipped.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>outputAvroMessage</name>
        <description>The ouput stream attribute which contains the output Avro message(s). This attribute must be of type blob. Default is the sole output attribute when the schema has one attribute otherwise `avroMessage`.</description>
        <optional>true</optional>
        <type>rstring</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>submitOnPunct</name>
        <description>Only valid if Avro schema is embedded in the output. When set to true, this the operator will submit the block of Avro messages what was built and generate a punctuation so that the receiving operator can potentially create a new file.</description>
        <optional>true</optional>
        <type>boolean</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>timePerMessage</name>
        <description>Only valid if Avro schema is embedded in the output. This parameter controls the maximum time in seconds before the Avro message block is submitted to the output port.</description>
        <optional>true</optional>
        <type>int64</type>
        <cardinality>1</cardinality>
      </parameter>
      <parameter>
        <name>tuplesPerMessage</name>
        <description>Only valid if Avro schema is embedded in the output. This parameter controls the minimum number of tuples that the Avro message block should contain before it is submitted to the outputport.</description>
        <optional>true</optional>
        <type>int64</type>
        <cardinality>1</cardinality>
      </parameter>
    </parameters>
    <inputPorts>
      <inputPortSet>
        <description>Port that ingests tuples</description>
        <windowingDescription/>
        <windowingMode>NonWindowed</windowingMode>
        <windowPunctuationInputMode>Oblivious</windowPunctuationInputMode>
        <controlPort>false</controlPort>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </inputPortSet>
    </inputPorts>
    <outputPorts>
      <outputPortSet>
        <description>Port that produces Avro records</description>
        <windowPunctuationOutputMode>Generating</windowPunctuationOutputMode>
        <cardinality>1</cardinality>
        <optional>false</optional>
      </outputPortSet>
    </outputPorts>
  </javaOperatorModel>
</operatorModel>