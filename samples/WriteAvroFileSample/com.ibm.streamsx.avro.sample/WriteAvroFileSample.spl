namespace com.ibm.streamsx.avro.sample ;

use com.ibm.streamsx.avro::* ;
use com.ibm.streamsx.json::* ;

/**
 * Converts a tuple to JSON, creates a blob in avro format with JSONToAvro operator and writes it to file.
 */
composite WriteAvroFileSample
{
	type 
		/**
		 * Sample tuple type
		 */
		tweetT = rstring username, rstring tweet, uint64 tweettime;

	graph
		// Generate 100 tweets with a changing value for every tweet
		stream<tweetT> GenerateTweet = Beacon()
		{
			param
				iterations : 100u ;
			output
				GenerateTweet : username = "Frank", tweet = "Hi, this is a cool tweet! "
					+(rstring) IterationCount(), tweettime = 1048298232ul + IterationCount() ;
		}

		// Convert the Tweet tuple to a JSON string
		stream<rstring jsonMessage> ConvertTupleToJson = TupleToJSON(GenerateTweet)
		{
		}


		// Batch the incoming tuples into Avro tuples with embedded schema
		stream<blob avroMessage> ConvertToAvro = JSONToAvro(ConvertTupleToJson)
		{
			param
				avroMessageSchemaFile: getThisToolkitDir()+"/etc/twitter.avsc";
				embedAvroSchema: true;
				tuplesPerMessage: 20l;
		}

		// Write the Avro message to output file
		() as WriteAvroFiles = FileSink(ConvertToAvro)
		{
			param
				format: block;
				file: "/tmp/twitter_{localtime:%Y%m%d_%H%M%S}_{id}.avro";
				flushOnPunctuation: true;
				closeMode: punct;
		}

}


