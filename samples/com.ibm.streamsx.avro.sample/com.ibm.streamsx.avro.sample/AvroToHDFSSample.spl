namespace com.ibm.streamsx.avro.sample ;

use com.ibm.streamsx.avro::* ;
use com.ibm.streamsx.json::* ;
use com.ibm.streamsx.hdfs::* ;

composite AvroToHDFSSample
{
	graph
	/*
	 * Generate 100 tweets with a changing value for every tweet		
		*/
		stream<tweetT> GenerateTweet = Beacon()
		{
			param
				iterations : 100u ;
			output
				GenerateTweet : username = "Frank", tweet = "Hi, this is a cool tweet! "
					+(rstring) IterationCount(), tweettime = 1048298232ul + IterationCount() ;
		}

		/*
		 * Convert the Tweet tuple to a JSON string		
		*/
		stream<rstring jsonMessage> ConvertTupleToJson = TupleToJSON(GenerateTweet)
		{
		}

		/* 
		 * Batch the incoming tuples into Avro tuples with embedded schema		
		*/
		stream<blob avroMessage> ConvertToAvro = JSONToAvro(ConvertTupleToJson)
		{
			param
				avroMessageSchemaFile : dataDirectory() + "/twitter.avsc" ;
				embedAvroSchema : true ;
				tuplesPerMessage : 20l ;
		}

		/*
		 * Write the Avro message to HDFS output files		
		*/
		() as WriteToHDFS = HDFS2FileSink(ConvertToAvro)
		{
			param
				closeOnPunct : true ;
				file : "/tmp/twitter_%TIME_%FILENUM.avro" ;
		}

}


