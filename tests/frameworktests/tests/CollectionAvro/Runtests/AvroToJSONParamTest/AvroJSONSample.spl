
use com.ibm.streamsx.avro::JSONToAvro;
use com.ibm.streamsx.avro::AvroToJSON;
use com.ibm.streamsx.json::TupleToJSON;

/**
 * Convert tuple to JSON, then to Avro and back to JSON. Avro AND JSON output is printed to the console output.
 */
public composite AvroJSONSample {
	type
		tweetT = rstring username, rstring tweet, uint64 tweettime;

	graph
		/* Generate 100 tweets with a changing value for every tweet */
		stream<tweetT> GenerateTweet = Beacon() {
			param
				iterations: 100u;
			output GenerateTweet :
				username = "Frank",
				tweet = "Hi, this is a cool tweet! "+(rstring) IterationCount(),
				tweettime = 1048298232ul + IterationCount();
		}

		/* Convert the Tweet tuple to a JSON string */
		stream<rstring jsonMessage> ConvertTupleToJson = TupleToJSON(GenerateTweet) {}

		/* Convert the JSON string to an Avro message */
		stream<blob avroMessage> ConvertToAvro = JSONToAvro(ConvertTupleToJson) {
			param
				avroMessageSchemaFile: getThisToolkitDir()+"/etc/twitter.avsc";
				//<embedAvroSchema_false>embedAvroSchema: false;
		}

		/* Convert the Avro message to a JSON string */
		stream<rstring jsonMessage, int32 x> ConvertToJson = AvroToJSON(
				//<!inputNoAvroMessage inputNoBlob>ConvertToAvro
				//<inputNoAvroMessage inputNoBlob>GenerateTweet
			) {
				//<!embedAvroSchema_false>param
					//<!embedAvroSchema_false>avroMessageSchemaFile: getThisToolkitDir()+"/etc/twitter.avsc";
					//<inputNoBlob>inputAvroMessage: "tweet";
					//<outputAttrNotExists>outputJsonMessage: "xx";
					//<outputAttrNoString>outputJsonMessage: "x";
		}

	config
		restartable: false;

}
